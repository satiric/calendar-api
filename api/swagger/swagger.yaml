swagger: "2.0"
info:
  version: "0.2.0"
  title: "V-life backend"
  description: "vlife backend application "
  contact:
    name: "Konstantin Maruhnich"
    email: "nocturneumbra@gmail.com"
# during dev, should point to your local machine
host: localhost:1337
# basePath prefixes all resource paths
basePath: /api/v1
tags: 
  - name: auth
    description: Authorization
  - name: user 
    description: User personal information
  - name: file
    description: Files
  - name: event
    description: Events 
  - name: contacts
    description: Events 
#
schemes:
  # tip: remove http to make production-grade
  - http
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
parameters:
  vlife-key:
    in: header
    name: "vlife-access-key"
    description: an authorization header
    required: true
    type: string
  auth-token: 
    in: header
    name: "auth-token"
    description: Authorization token, binded to unique user.
    type: string
  auth-token-required: 
    in: header
    name: "auth-token"
    description: Authorization token, binded to unique user.
    type: string
    required: true
definitions:

  AuthTokenReadable:
    type: object
    properties:
      id: 
        type: integer
      is_active: 
        type: integer
      value:
        type: string
        minLength: 40
      date_expire: 
        type: string 
        format: date-time
      refresh_token: 
        type: string
        description: for refresh-token request it must be putted to body as refresh_token. It is especially token for correct refresh (it is not an auth-token!)
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
  Contact:
    type: object
    properties:
      email: 
        type: string
      phone: 
        type: string
  File: 
    type: object
    properties:
      id: 
        type: integer
      createdAt: 
        type: string
        format: date-time
      udatedAt: 
        type: string
        format: date-time
      name:
        type: string
        minLength: 40
      size: 
        type: string 
        format: date-time
      ext: 
        type: string
      caption: 
        type: string
      url: 
        type: string
      mini_url: 
        type: string
  UserReadable:
    type: object
    required:
      - name
      - second_name
      - email
      - password
      - phone
    properties:
      name:
        type: string
        example: Jhon
        minLength: 2
        maxLength: 25
      second_name:
        type: string
        example: Statham
        minLength: 2
        maxLength: 25
      email:
        type: string
        example: jhonstatham@gmail.com2
      password:
        type: string
        minLength: 8
        maxLength: 25
        example: mycoolpassword
      phone:
        type: string
        example: "+1234567899"
        pattern: "\\+([0-9]){9,13}"
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
      avatar: 
        "$ref": "#/definitions/File"

  UserEditable:
    type: object
    properties:
      name:
        type: string
        example: Jhon
        minLength: 2
        maxLength: 25
      second_name:
        type: string
        example: Statham
        minLength: 2
        maxLength: 25
      email:
        type: string
        example: jhonstatham@gmail.com
      password:
        type: string
        minLength: 8
        maxLength: 25
        example: mycoolpassword
      avatar:
        type: integer
        example: 4
      phone:
        type: string
        example: "+1234567899"
        pattern: "\\+([0-9]){9,13}"    
        
  UserSignup:
    type: object
    required:
      - name
      - second_name
      - email
      - password
      - phone
      - security_key
    properties:
      name:
        type: string
        example: Jhon
        minLength: 2
        maxLength: 25
      second_name:
        type: string
        example: Statham
        minLength: 2
        maxLength: 25
      email:
        type: string
        example: jhonstatham@gmail.com
      password:
        type: string
        minLength: 8
        maxLength: 25
        example: mycoolpassword
      avatar:
        type: integer
        example: 4
      phone:
        type: string
        example: "+1234567899"
        pattern: "\\+([0-9]){9,13}"
      security_key:
        type: string
        description: obtained from verifyPhone
        example: "sdafsgk23r23io0daod"

  Event:
    type: object
    required:
      - id
      - title
      - time_start
      - time_end
      - event_date
    properties:
      id: 
        type: integer
      title:
        type: string
        example: Meeting near the caffe
        maxLength: 25
      sphere: 
        type: string
        enum: [Personal, Work]
      event_date: 
        type: string
        format: datetime
      time_start: 
        type: string
        format: time
      time_end: 
        type: string
        format: time
      repeat_type: 
        type: string
        enum: [Never, Day, Week, Fortnight, Month]
      repeat_option: 
        type: array
        description: Array with days of week, 
        items: 
          type: string
          enum: [Mon, Tue, Wed, Thu, Fri, Sat, Sun]
      end_repeat: 
        type: string
        format: datetime
        description: when repeating must be stopped.
      description: 
        type: string
        description: Description for the event
      reminds: 
        type: integer
        description: Reminds before x minutes.
      active: 
        type: boolean
        description: Status for the event. Default is true. 
  EventResponse: 
    required: 
      - data
      - page 
      - pageSize
      - total
    properties:
      data:
        type: array
        items: 
          "$ref": "#/definitions/Event"
      page: 
        type: integer
      pageSize:
        type: integer
      total:
        type: integer
  
  AuthResponse:
    required:
      - status
      - user
    properties:
      status:
        type: integer
      user: 
        "$ref": "#/definitions/UserReadable"
      token: 
        "$ref": "#/definitions/AuthTokenReadable"
  ErrorResponse:
    required:
      - status
    properties:
      message:
        type: string
      status: 
        type: string
  SuccessResponse:
    required:
      - status
    properties:
      message:
        type: string
      status: 
        type: string
      data: 
        type: string
  PhoneSuccessResponse:
    required:
      - status
      - code
    properties:
      status: 
        type: string
      code: 
        type: integer
paths:
  /user/signup:
    # binds a127 app logic to a route
    x-swagger-router-controller: UserController
    post:
      tags: 
        - auth
        - user
      description: Create user record, send hello-message to email and log in the user. User's object contain token with expire_date and value of this token. This value must be attached to each one next query as header auth-token or GET-parameter with same caption.
      # used as the method name of the controller
      operationId: signup
      parameters:
        - $ref: "#/parameters/vlife-key"
        - in: body
          name: body
          description: "Object User"
          required: true
          schema:
            "$ref": "#/definitions/UserSignup"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/AuthResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/login:
    # binds a127 app logic to a route
    x-swagger-router-controller: UserController
    post:
      tags: 
        - auth
      description: Create auth token
      # used as the method name of the controller
      operationId: login
      parameters:
        - $ref: "#/parameters/vlife-key"
        - name: password
          in: query
          description: password
          required: true
          type: string
        - name: email
          in: query
          description: email
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/AuthResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /user/checkEmail:
    # binds a127 app logic to a route
    x-swagger-router-controller: UserController
    get:
      tags:
      - auth
      description: Note - does not validate email, just check it in database
      # used as the method name of the controller
      operationId: checkEmail
      parameters:
        - $ref: "#/parameters/vlife-key"
        - name: email
          in: query
          description: email for user
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        #  schema:
            # a pointer to a definition
          
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/checkPhone:
    # binds a127 app logic to a route
    x-swagger-router-controller: UserController
    get:
      tags: 
      - auth
      description: "phone must be url-encoded. Format for phone: international phone number; without any special chars (dots, brackets, etc) except fronted plus(+). The method does not validate phone number, only check it in database. If phone is not exists in database, the method will send sms. For restricting this behaviour you must attach noVerify parameter to requests"
      # used as the method name of the controller
      operationId: checkPhone
      parameters:
        - $ref: "#/parameters/vlife-key"
        - in: query
          name: "phone"
          description: url-encoded phone number
          required: true
          type: string
        - in: query
          name: "noVerify"
          description: For restricting sms-sending this parameter must contain any not-null value
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/PhoneSuccessResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/logout:
    # binds a127 app logic to a route
    x-swagger-router-controller: UserController
    get:
      tags: 
      - auth
      description: Remove auth token for current authorized user
      # used as the method name of the controller
      operationId: logout
      parameters:
        - $ref: "#/parameters/vlife-key"
        - $ref: "#/parameters/auth-token-required"
         
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /user/info/{id}:
    x-swagger-router-controller: UserController
    get:
      tags: 
      - user
      description: Get info about user by id
      # used as the method name of the controller
      operationId: find
      parameters:
        - $ref: "#/parameters/vlife-key"
        - name: id
          in: path
          description: User id.
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: Success
          schema: 
            type: object
            required: 
            - data
            properties: 
              data:
                $ref: "#/definitions/UserReadable"
        #  schema:
            # a pointer to a definition
           # $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/info:
    # binds a127 app logic to a route
    x-swagger-router-controller: UserController
    put:
      tags:
      - user
      description: Edit info for current authorized user
      # used as the method name of the controller
      operationId: update
      parameters:
        - $ref: "#/parameters/vlife-key"
        - $ref: "#/parameters/auth-token-required"
        - in: body
          name: body
          description: "Объект User"
          required: true
          schema:
            "$ref": "#/definitions/UserEditable"
      responses:
        "200":
          description: Success
        #  schema:
            # a pointer to a definition
           # $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /user/resetPassword:
    # binds a127 app logic to a route
    x-swagger-router-controller: UserController
    post:
      tags:
      - auth
      - user
      description: Send email with generated password-reset token to user. 
      # used as the method name of the controller
      operationId: resetPassword
      parameters:
        - $ref: "#/parameters/vlife-key"
        - name: email
          in: query
          description: email for user
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/SuccessResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/changePassword:
    # binds a127 app logic to a route
    x-swagger-router-controller: UserController
    put:
      tags:
      - auth
      - user
      description: Changes password for authorized user or for user, finded by incoming password-reset token in body of query. 
      # used as the method name of the controller
      operationId: changePassword
      parameters:
        - $ref: "#/parameters/vlife-key"
        - $ref: "#/parameters/auth-token"
        - name: password
          in: query
          description: New password value
          required: true
          type: string
        - name: old_password
          in: query
          description: Old password value
          type: string
        - name: token
          in: query
          description: For anonymous user password-reset token must be sent by resetPassword method in email.
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/SuccessResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"       
  /file:
    # binds a127 app logic to a route
    x-swagger-router-controller: FileController
    post:
      tags: 
      - file
      description: Upload file to S3 Amazon and create record with information about the file in database.
      # used as the method name of the controller
      operationId: create
      consumes: 
        - "multipart/form-data"
      parameters:
        - $ref: "#/parameters/vlife-key"
        - name: file
          in: formData
          description: Uplodaed file.
          required: true
          type: file
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/File"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/refreshToken:
    # binds a127 app logic to a route
    x-swagger-router-controller: UserController
    post:
      tags:
      - auth
      description: Return new token for last expired token.
      # used as the method name of the controller
      operationId: refresh
      parameters:
        - $ref: "#/parameters/vlife-key"
        - $ref: "#/parameters/auth-token-required"
        - in: body
          name: refresh_token
          required: true
          schema: 
            type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/AuthTokenReadable"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /user/verifyPhone:
    # binds a127 app logic to a route
    x-swagger-router-controller: UserController
    post:
      tags: 
      - auth
      description: Check sms code 
      # used as the method name of the controller
      operationId: verifyPhone
      parameters:
        - $ref: "#/parameters/vlife-key"
        - in: query
          name: phone
          type: string
          pattern: "\\+([0-9]){9,13}"
        - in: query
          name: code
          type: string
          minLength: 4
      responses:
        "200":
          description: Success
          schema:
            type: "object"
            required: 
            - data
            properties: 
              data:
                type: string
                description: containt security key for next steps of signup. Timelife for security key is 10 minutes

        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /events:
    # binds a127 app logic to a route
    x-swagger-router-controller: EventsController
    post:
      tags: 
      - event
      description: Create event
      # used as the method name of the controller
      operationId: createEvent
      parameters:
        - $ref: "#/parameters/vlife-key"
        - $ref: "#/parameters/auth-token-required"
        - in: body
          name: body
          description: "Object Event"
          required: true
          schema:
            "$ref": "#/definitions/Event"
      responses:
        "200":
          description: Success
          schema:
            "$ref": "#/definitions/Event"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      tags: 
      - event
      description: Get events
      # used as the method name of the controller
      operationId: findEvent
      parameters:
        - $ref: "#/parameters/vlife-key"
        - $ref: "#/parameters/auth-token-required"
        - in: query
          name: "page"
          description: page, default 1
          type: integer
        - in: query
          name: "pageSize"
          description: pagesize, default 10
          type: integer
      responses:
        "200":
          description: Success
          schema:
            "$ref": "#/definitions/EventResponse"
              
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /events/{id}:
    put:
      tags: 
      - event
      description: Put event
      # used as the method name of the controller
      operationId: putEvent
      parameters:
        - $ref: "#/parameters/vlife-key"
        - $ref: "#/parameters/auth-token-required"
        - name: id
          in: path
          description: User id.
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: "Object Event"
          required: true
          schema:
            "$ref": "#/definitions/Event"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/Event"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /contacts:
    # binds a127 app logic to a route
    x-swagger-router-controller: ContactsController
    post:
      tags: 
      - user
      - contacts
      description: Check sms code 
      # used as the method name of the controller
      operationId: createContacts
      parameters:
        - $ref: "#/parameters/vlife-key"
        - $ref: "#/parameters/auth-token-required"
        - in: body
          name: body
          description: "Contacts"
          required: true
          schema: 
            type: array
            items: 
              $ref: "#/definitions/Contact"
      responses:
        "200":
          description: Success
          schema:
            type: "object"
            required: 
            - data
            properties: 
              data:
                type: array
                description: containt security key for next steps of signup. Timelife for security key is 10 minutes
                items: 
                  $ref: "#/definitions/UserReadable"

        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
